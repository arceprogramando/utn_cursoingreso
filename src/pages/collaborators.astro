---
import { Icon } from 'astro-icon/components';
import BaseLayout from '../layouts/BaseLayout.astro';
import type { Collaborator } from '../types/collaborator';

const title = 'Colaboradores';
const url = 'https://my-api-mocha-omega.vercel.app/api/contributors';

let colaboradores: Collaborator[] = [];
let errorMessage: string = '';

try {
  const response = await fetch(url);
  if (response.ok) {
    colaboradores = await response.json();

    await Promise.all(
      colaboradores.map(async (colaborador: Collaborator) => {
        try {
          const userResponse = await fetch(`https://api.github.com/users/${colaborador.login}`);
          if (userResponse.ok) {
            const userData = await userResponse.json();
            colaborador.description = userData.bio || '';
          } else {
            colaborador.description = '';
          }
        } catch (error: unknown) {
          if (error instanceof Error) {
            colaborador.description = 'Error al obtener la descripción: ' + error.message;
          } else {
            colaborador.description = 'Error desconocido.';
          }
        }
      }),
    );
  } else {
    errorMessage = 'Respuesta de red OK pero respuesta HTTP no OK';
  }
} catch (error: unknown) {
  if (error instanceof Error) {
    errorMessage = 'Hubo un problema con la petición Fetch: ' + error.message;
  } else {
    errorMessage = 'Hubo un problema desconocido.';
  }
}
---

<BaseLayout title={title}>
  <div class="flex flex-col justify-center items-center container mx-auto text-center">
    {
      errorMessage ? (
        <p class="text-red-500">{errorMessage}</p>
      ) : (
        <ul class="flex flex-wrap justify-center gap-6">
          {colaboradores.map((colaborador) => (
            <li class="p-6 bg-black text-white rounded-lg shadow-lg flex flex-col items-center gap-4 w-64">
              <div class="flex flex-col items-center">
                <div class="h-24 w-24 border-4 bg-white rounded-full overflow-hidden mb-4">
                  <img src={colaborador.avatar_url} alt={colaborador.login} class="object-cover w-full h-full" />
                </div>
                <div class="text-center">
                  <div class="font-bold text-xl">{colaborador.login}</div>
                  <div class="text-gray-400 text-sm">{colaborador.description ? colaborador.description : 'Contributor'}</div>
                </div>
              </div>
              {colaborador.contributions && <div class="text-center text-sm text-gray-400">{colaborador.contributions} Contribuciones</div>}
              <a
                href={colaborador.html_url}
                title={`Ir a perfil de ${colaborador.login} en Github`}
                aria-label={`Ir a perfil de ${colaborador.login} en Github`}
              >
                <Icon
                  name="github"
                  width={24}
                  height={24}
                  title="github"
                  aria-label="Ver en github"
                  class="hover:underline font-bold uppercase hover:text-gray-500 text-white"
                />
              </a>
            </li>
          ))}
        </ul>
      )
    }
  </div>
</BaseLayout>
