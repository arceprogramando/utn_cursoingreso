---
import { Icon } from 'astro-icon/components';
import BaseLayout from '../layouts/BaseLayout.astro';
import type { Collaborator } from '../types/collaborator';
import Image from 'astro/components/Image.astro';
export const prerender = true;
const subTitle = 'Colaboradores';
const title = 'Colaboradores Tecnicatura en Programación - UTN 2025';
const apiUrl = 'https://apicollaborator.vercel.app/';

async function fetchCollaborators() {
  try {
    const response = await fetch(apiUrl);
    if (!response.ok) throw new Error('Error al obtener colaboradores desde la API principal.');

    const colaboradores: Collaborator[] = await response.json();

    // Mapear descripciones desde la API de GitHub
    const colaboradoresConDescripcion = await Promise.all(
      colaboradores.map(async (colaborador) => {
        try {
          const userResponse = await fetch(`https://api.github.com/users/${colaborador.login}`);
          if (userResponse.ok) {
            const userData = await userResponse.json();
            colaborador.description = userData.bio || '';
          } else {
            colaborador.description = '';
          }
        } catch {
          colaborador.description = 'Error al obtener la descripción.';
        }
        return colaborador;
      }),
    );

    return { colaboradores: colaboradoresConDescripcion, errorMessage: '' };
  } catch (error: unknown) {
    const errorMessage = error instanceof Error ? `Error al cargar datos: ${error.message}` : 'Error desconocido al cargar datos.';
    return { colaboradores: [], errorMessage };
  }
}

const { colaboradores, errorMessage } = await fetchCollaborators();
---

<BaseLayout title={title} subTitle={subTitle}>
  <div class="flex flex-col justify-center items-center container mx-auto text-center">
    {
      errorMessage ? (
        <p class="text-red-500">{errorMessage}</p>
      ) : (
        <ul class="flex flex-wrap justify-center gap-6">
          {colaboradores.map((colaborador) => (
            <li class="p-6 bg-black text-white rounded-lg shadow-lg flex flex-col items-center gap-4 w-64">
              <div class="flex flex-col items-center">
                <Image
                  src={colaborador.avatar_url}
                  alt={colaborador.login}
                  loading="lazy"
                  width="96"
                  height="96"
                  class="rounded-full border-4 border-white"
                />
                <div class="text-center">
                  <div class="font-bold text-xl">{colaborador.login}</div>
                  <div class="text-gray-400 text-sm">{colaborador.description ? colaborador.description : 'Contributor'}</div>
                </div>
              </div>
              {colaborador.contributions && <div class="text-center text-sm text-gray-400">{colaborador.contributions} Contribuciones</div>}
              <a
                href={colaborador.html_url}
                title={`Ir a perfil de ${colaborador.login} en Github`}
                aria-label={`Ir a perfil de ${colaborador.login} en Github`}
              >
                <Icon
                  name="github"
                  width={24}
                  height={24}
                  title="github"
                  aria-label="Ver en github"
                  class="hover:underline font-bold uppercase hover:text-gray-500 text-white"
                />
              </a>
            </li>
          ))}
        </ul>
      )
    }
  </div>
</BaseLayout>
