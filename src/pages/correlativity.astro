---
import { subjects } from '../data/correlativity';
import BaseLayout from '../layouts/BaseLayout.astro';
import type { Correlativity } from '../types/correlativity';

const title = 'Correlatividades de la Tecnicatura en Programación - UTN 2025';
const subTitle = 'Correlatividades';

---

<BaseLayout title={`${title}`} subTitle={`${subTitle}`}>
  <div class="flex flex-col-reverse md:flex-col  justify-center items-center container mx-auto text-center p-2 overflow-x-scroll md:overflow-hidden text-sm">
    <table class="min-w-full  divide-y divide-gray-200 shadow border-b border-gray-200 sm:rounded-lg">
      <thead class="border-t-2 border-l-2 border-r-2 bg-black text-white">
        <tr class="[&>*]:w-4">
          <th scope="col" class="px-2 py-3 md:px-6 md:py-3 text-center text-xs md:font-medium uppercase md:tracking-wider"> Nº </th>
          <th scope="col" class="px-2 py-3 md:px-6 md:py-3 text-center text-xs md:font-medium uppercase md:tracking-wider md:min-w-64"> ASIGNATURA </th>
          <th scope="col" class="px-2 py-3 md:px-6 md:py-3 text-center text-xs md:font-medium uppercase md:tracking-wider"> NECESARIAS CURSADAS </th>
          <th scope="col" class="px-2 py-3 md:px-6 md:py-3 text-center text-xs md:font-medium uppercase md:tracking-wider"> Aprobadas </th>
          <th scope="col" class="px-2 py-3 md:px-6 md:py-3 text-center text-xs md:font-medium uppercase md:tracking-wider"> Horas Totales </th>
        </tr>
      </thead>
      <tbody class="divide-y divide-x-2 ">
        {
          subjects.map((subject) => {
            const bgColor = subject.isPassed ? 'bg-green-300' : 'bg-yellow-300';
            const passed = subject.isPassed ? 'Aprobada ✅' : 'Pendiente ⏳';

            return (
              <tr class={`${bgColor} [&>*]:py-3 [&>*]:md:p-2`}>
                {subject.id !== 0 ? <td>{subject.id}</td> : <td />}
                <td>{subject.name}</td>
                <td>{subject.prerequisites}</td>
                <td>{passed}</td>
                {subject.id !== 0 ? <td>{subject.hours}</td> : <td />}
              </tr>
            );
          })
        }
      </tbody>
    </table>
    
    <div>

      <p class="text-lg font-semibold text-gray-800">
        Horas Totales:
        <span class="font-bold text-blue-600">
          {subjects.reduce((total, subject) => total + subject.hours, 0)}
        </span>
      </p>
      
      <p class="text-lg font-semibold text-gray-800">
        Horas Faltantes: <span class="font-bold text-blue-600">
          {subjects.reduce((total, subject) => (subject.isPassed ? total : total + subject.hours), 0)}
        </span>
      </p>
    </div>
  </div>
</BaseLayout>
