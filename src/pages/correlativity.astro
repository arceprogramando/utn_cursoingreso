---
import BaseLayout from '../layouts/BaseLayout.astro';
import type { Correlativity } from '../types/correlativity';

const title = 'Correlatividades de la Tecnicatura Universitaria en Programación - UTN 2025';

const subjects: Correlativity[] = [
  { id: 0, name: 'Programación (Ingreso)', prerequisites: '-', isPassed: true, hours: 0 },
  { id: 0, name: 'Matemática Inicial (Ingreso)', prerequisites: '-', isPassed: true, hours: 0 },
  { id: 0, name: 'Lectura Comprensiva (Ingreso)', prerequisites: '-', isPassed: true, hours: 0 },
  { id: 1, name: 'Programación I', prerequisites: '-', isPassed: true, hours: 128 },
  { id: 2, name: 'Arquitectura y Sistemas operativos', prerequisites: '-', isPassed: true, hours: 64 },
  { id: 3, name: 'Matemática', prerequisites: '-', isPassed: true, hours: 64 },
  { id: 4, name: 'Organización empresarial', prerequisites: '-', isPassed: true, hours: 64 },
  { id: 5, name: 'Programación II', prerequisites: '1, 2', isPassed: true, hours: 128 },
  { id: 6, name: 'Probabilidad y Estadística', prerequisites: '3', isPassed: true, hours: 64 },
  { id: 7, name: 'Base de Datos I', prerequisites: '1, 3', isPassed: true, hours: 64 },
  { id: 8, name: 'Inglés I', prerequisites: '-', isPassed: true, hours: 64 },
  { id: 9, name: 'Programación III', prerequisites: '5, 7', isPassed: false, hours: 128 },
  { id: 10, name: 'Base de Datos II', prerequisites: '7', isPassed: false, hours: 64 },
  { id: 11, name: 'Metodología de Sistemas I', prerequisites: '5, 7', isPassed: false, hours: 64 },
  { id: 12, name: 'Inglés II', prerequisites: '8', isPassed: false, hours: 64 },
  { id: 13, name: 'Programación IV', prerequisites: '9, 10, 11', isPassed: false, hours: 128 },
  { id: 14, name: 'Metodología de Sistemas II', prerequisites: '11', isPassed: false, hours: 64 },
  { id: 15, name: 'Introducción al análisis de datos', prerequisites: '10', isPassed: false, hours: 32 },
  { id: 16, name: 'Legislación', prerequisites: '7', isPassed: false, hours: 32 },
  { id: 17, name: 'Gestión de desarrollo de software', prerequisites: '9, 10', isPassed: false, hours: 64 },
  { id: 18, name: 'Trabajo Final Integrador', prerequisites: '-', isPassed: false, hours: 95 },
];
---

<BaseLayout title={`${title}`}>
  <div class="flex flex-col justify-center items-center container mx-auto text-center p-2 overflow-x-scroll md:overflow-hidden">
    <table class="min-w-full divide-y divide-gray-200 shadow border-b border-gray-200 sm:rounded-lg">
      <thead class="bg-gray-50">
        <tr class="[&>*]:w-4">
          <th scope="col" class="md:px-6 md:py-3 text-center text-xs md:font-medium text-gray-500 uppercase md:tracking-wider"> Nº </th>
          <th scope="col" class="md:px-6 md:py-3 text-center text-xs md:font-medium text-gray-500 uppercase md:tracking-wider"> ASIGNATURA </th>
          <th scope="col" class="md:px-6 md:py-3 text-center text-xs md:font-medium text-gray-500 uppercase md:tracking-wider">
            NECESARIAS CURSADAS
          </th>
          <th scope="col" class="md:px-6 md:py-3 text-center text-xs md:font-medium text-gray-500 uppercase md:tracking-wider"> Aprobadas </th>
          <th scope="col" class="md:px-6 md:py-3 text-center text-xs md:font-medium text-gray-500 uppercase md:tracking-wider"> Horas Totales </th>
        </tr>
      </thead>
      <tbody class="bg-white divide-y divide-gray-200 text-xs">
        {
          subjects.map((subject) => {
            const bgColor = subject.isPassed ? 'bg-green-300' : 'bg-yellow-300';
            const passed = subject.isPassed ? 'Aprobada ✅' : 'Pendiente ⏳';

            return (
              <tr class={`${bgColor} [&>*]:py-3 [&>*]:md:p-2`}>
                {subject.id !== 0 ? <td>{subject.id}</td> : <td />}
                <td>{subject.name}</td>
                <td>{subject.prerequisites}</td>
                <td>{passed}</td>
                {subject.id !== 0 ? <td>{subject.hours}</td> : <td />}
              </tr>
            );
          })
        }
      </tbody>
    </table>
  </div>

  <p class="text-lg font-semibold text-gray-800">
    Horas Totales:
    <span class="font-bold text-blue-600">
      {subjects.reduce((total, subject) => total + subject.hours, 0)}
    </span>
  </p>

  <p class="text-lg font-semibold text-gray-800">
    Horas Faltantes: <span class="font-bold text-blue-600">
      {subjects.reduce((total, subject) => (subject.isPassed ? total : total + subject.hours), 0)}
    </span>
  </p>
</BaseLayout>
